name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  determine_jobs:
    name: Determine jobs to run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Detect Frontend-related changes
        id: changes
        uses: technote-space/get-diff-action@v6
        with:
          PATTERNS: |
            **/src/**/*.{js,jsx,ts,tsx,json,css}
            package.json
            pnpm-lock.yaml
            .nvmrc
            vite.config.ts
            tsconfig.json
            !**/*.md
            !**/*.mdx

  vitest:
    name: Frontend Tests
    needs: determine_jobs
    if: ${{ needs.determine_jobs.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version-file: [".nvmrc"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - uses: pnpm/action-setup@v4
        name: Add pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install pnpm packages
        run: pnpm install

      - name: Run Unit Tests
        run: pnpm test
